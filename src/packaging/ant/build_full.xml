<?xml version='1.0' encoding='UTF-8'?>

<!--Ant build script for Jajuk team packagers -->
<project default='package_all' name='jajuk' basedir="../../..">

	<!-- ======================= -->
	<!-- | Properties          | -->
	<!-- ======================= -->

	<!--Distribution release-->
	<property name='version' value='12.0dev' />

	<!--Test flag: values: 'test' or 'notest'
    'test' for 'unstable' branches, 'notest' for master, pre-release and maintenance branches -->
	<property name='test_flag' value='notest' />

	<!-- Root directory for all produced files -->
	<property name='root.dir' value='build' />

	<!-- Source distribution repository, contains the sources for end-user and to build jajuk.jar and run tests -->
	<property name='sources_dist.dir' value='${root.dir}/sources_dist/jajuk-src-${version}' />

	<!-- Directory that contains the final artefacts (source, .zip, exe ...) -->
	<property name='packages.dir' value='${root.dir}/packages' />

	<!-- Windows distribution repository -->
	<property name='windows_dist.dir' value='${root.dir}/windows' />

	<!-- Linux distributions repository -->
	<property name='linux_dist.dir' value='${root.dir}/linux' />

	<!-- Linux tarball directory -->
	<property name='linux_tarball.dir' value='${linux_dist.dir}/jajuk-${version}' />


	<!-- OSX distribution repository -->
	<property name='osx_dist.dir' value='${root.dir}/osx' />

	<!-- Launch4j installation path, do not change the name of this property -->
	<property name="launch4j.dir" location="/opt/launch4j" />

	<!-- Linux oracle 64 bits 1.8 JRE -->
	<property name="jre.dir" location="/opt/jre" />



	<!-- ======================= -->
	<!-- | Global Filters        | -->
	<!-- ======================= -->
	<!-- Set build date -->
	<tstamp>
		<format property='build.time' pattern='yyyy/MM/dd HH:mm' />
	</tstamp>
	<filter token="DATE_REPLACED_BY_ANT" value="${build.time}" />
	<filter token="VERSION_REPLACED_BY_ANT" value="${version}" />
	<filter token="TEST_FLAG_REPLACED_BY_ANT" value="${test_flag}" />

	<!-- ======================= -->
	<!-- | Tasks definition    | -->
	<!-- ======================= -->

	<!-- Windows executable creation from jar -->
	<taskdef name="launch4j" classname="net.sf.launch4j.ant.Launch4jTask" classpath="${launch4j.dir}/launch4j.jar
	        :${launch4j.dir}/lib/xstream.jar" />

	<!--NSIS installer Windows package creation -->
	<taskdef name="nsis" classname="com.danielreese.nsisant.Task">
		<classpath location="lib/build/nsisant-1.3.jar" />
	</taskdef>

	<!-- jarbundler OSX package creation -->
	<taskdef name='jarbundler' classpath='lib/build/jarbundler-2.4.0.jar' classname='net.sourceforge.jarbundler.JarBundler' />

	<!-- ========================== -->
	<!-- | OS-independent targets | -->
	<!-- ========================== -->

	<target name='startup'>
		<echo message='Building Jajuk release: ${version} using Java ${java.specification.version}' />
		<echo message='Basedir: ${basedir}' />
		<echo message='Build time: ${build.time}' />
	</target>

	<target name='clean'>
		<echo message='Clean up previous build files' />
		<delete failonerror='false' dir='${root.dir}' />
	</target>

	<target name='package_all' depends='startup,build_sources_dist,build_jajuk,test_jajuk,build_nsis,build_windows_portable,build_macos,tarball_linux'>
		<echo message='Create all packages, source archive in:  ${sources_dist.dir}' />
	</target>

	<target name='build_sources_dist' depends="clean">
		<echo message='Prepare the source package' />
		<copy todir='${sources_dist.dir}'>
			<fileset dir='.'>
				<exclude name=".*/" />
				<exclude name="*.iml" />
				<exclude name="lib/" />
				<exclude name="build/" />
				<exclude name="lib/mplayer/" />
				<exclude name="src/tools/" />
				<exclude name="src/packaging/" />
				<exclude name="bin/" />
				<exclude name="test-reports/" />
			</fileset>
		</copy>

		<!--copy informative, build and scripts files to the root of the source distribution-->
		<copy todir='${sources_dist.dir}' filtering="true">
			<fileset file='src/legals/LICENSE-GPL.txt' />
			<fileset file='src/legals/DERIVATED.txt' />
			<fileset file='src/legals/AUTHORS.txt' />
			<fileset file='src/packaging/linux/jajuk' />
			<fileset file='src/packaging/ant/BUILD.txt' />
		</copy>

		<!-- Copy and rename the end user ant script -->
		<copy file='src/packaging/ant/build_enduser.xml' tofile='${sources_dist.dir}/build.xml' filtering="true" />

		<!-- Filter remaining files -->
		<copy todir='${sources_dist.dir}/src/main/java/org/jajuk/util' filtering="true" overwrite="true">
			<fileset file='src/main/java/org/jajuk/util/Const.java' />
		</copy>

		<!-- Copy the junit jar used for junit tests performed by the end users.
        Also copy all jajuk dependencies (this copy must not use filtering)-->
		<copy todir='${sources_dist.dir}/lib'>
			<fileset dir="lib">
				<include name="*.jar" />
			</fileset>
			<fileset dir="lib/build">
				<include name="junit*.jar" />
			</fileset>
		</copy>

		<!-- Build the sources zip, we zip the parent directory of sources to create a root directory
         at unzipping -->
		<zip basedir='${sources_dist.dir}/..' destfile='${packages.dir}/jajuk-sources-${version}.zip' />
	</target>

	<target name='build_jajuk' depends="build_sources_dist">
		<echo message='Build jajuk from the source package' />
		<ant dir="${sources_dist.dir}" target="package_jar" inheritall="false" useNativeBasedir='true' />
		<!-- copy the jar to the final packages directory -->
		<copy file="${sources_dist.dir}/bin/jajuk.jar" todir="${packages.dir}" />
	</target>

	<target name='test_jajuk' depends="build_sources_dist">
		<echo message='Test jajuk from the source package' />
		<ant dir="${sources_dist.dir}" target="tests" inheritall="false" useNativeBasedir='true' />
	</target>

	<!-- ========================== -->
	<!-- | MS Windows targets     | -->
	<!-- ========================== -->

	<!-- Windows jajuk.exe creation using launch4j-->
	<target name='launch4j' depends='build_jajuk'>
		<echo message='Prepare files to build Windows executable' />
		<mkdir dir='${windows_dist.dir}' />
		<!--Windows specific -->
		<copy todir='${windows_dist.dir}' filtering="true">
			<fileset file='src/packaging/windows/jajuk.launch4j' />
		</copy>
		<!-- Copy jajuk.jar to be embedded into the exe -->
		<copy todir='${windows_dist.dir}'>
			<fileset file='${packages.dir}/jajuk.jar' />
		</copy>
		<copy todir='${windows_dist.dir}'>
			<fileset file='src/packaging/windows/jajuk-icon.ico' />
		</copy>
		<echo message='Create Jajuk Windows executable file' />
		<launch4j configFile="${windows_dist.dir}/jajuk.launch4j" />
	</target>

	<!-- Windows Nullsoft installer -->
	<target name='build_nsis' depends='launch4j'>
		<echo message='Create Jajuk NSIS installer' />
		<!-- Copy and Set release in nsis descriptor files -->
		<copy todir='${windows_dist.dir}' filtering="true">
			<fileset file='src/packaging/windows/jajuk.nsis' />
			<fileset file='src/legals/LICENSE-GPL.txt' />
		</copy>
		<!-- Uncompress the nsis resources used to build the installer -->
		<unzip src="src/packaging/windows/Resources_nsis.zip" dest="${windows_dist.dir}" />
		<copy todir='${windows_dist.dir}'>
			<fileset dir='.'>
				<!-- No unix lib, no mplayer -->
				<include name="lib/**" />
				<exclude name="lib/build/" />
				<exclude name="**/*.so" />
				<exclude name="**/mplayer/**" />
			</fileset>
		</copy>
		<!-- copy mplayer.exe to the root destination directory -->
		<copy todir='${windows_dist.dir}'>
			<fileset file="lib/mplayer/windows/mplayer.exe" />
		</copy>
		<!-- Launch the installer creation -->
		<nsis script="${windows_dist.dir}/jajuk.nsis" />
		<!-- Copy the jar to the final packages directory -->
		<copy todir='${packages.dir}'>
			<fileset file='${windows_dist.dir}/jajuk*-setup.exe' />
		</copy>
	</target>

	<!-- Windows portable without JRE -->
	<target name='build_windows_portable' depends='build_jajuk'>
		<echo message='Create Jajuk Windows portable distribution' />
		<property name='portable.dir' value='${windows_dist.dir}/jajuk-${version}' />
		<delete failonerror='false' dir='${windows_dist.dir}' />
		<mkdir dir='${windows_dist.dir}' />
		<mkdir dir='${portable.dir}' />
		<copy todir='${portable.dir}' filtering="true">
			<fileset file='src/legals/LICENSE-GPL.txt' />
			<fileset file='src/packaging/windows/jajuk.bat' />
			<fileset file='${packages.dir}/jajuk.jar' />
		</copy>
		<copy todir='${portable.dir}'>
			<fileset dir='.'>
				<!-- No unix lib, no mplayer -->
				<include name="lib/**" />
				<exclude name="lib/build/" />
				<exclude name="**/*.so" />
				<exclude name="**/mplayer/**" />
			</fileset>
		</copy>
		<!-- copy mplayer.exe to the root destination directory -->
		<copy todir='${portable.dir}'>
			<fileset file="lib/mplayer/windows/mplayer.exe" />
		</copy>
		<zip destfile="${packages.dir}/jajuk-portable-${version}.zip" basedir="${windows_dist.dir}">
		</zip>
	</target>

	<!-- ========================== -->
	<!-- | OS X targets           | -->
	<!-- ========================== -->

	<!--jarbundler Mac OS X package creation (Jajuk.app)-->
	<target name='jarbundler' depends='build_jajuk'>
		<echo message='jarbundler' />
		<mkdir dir='${osx_dist.dir}' />
		<jarbundler dir='${osx_dist.dir}' name='Jajuk' shortname="Jajuk" mainclass='org.jajuk.Main' icon='src/packaging/OSX/jajuk-icon_source.icns' jvmversion='1.8+' version='${version}' useJavaXKey='true' stubfile='src/packaging/OSX/universalJavaApplicationStub' build='${version}' vmoptions='-Xms20M -Xmx2G -Xverify:none' arguments='-${test_flag}' verbose='true'>
			<jarfileset dir='lib'>
				<include name='*.jar' />
			</jarfileset>
			<jarfileset file="${packages.dir}/jajuk.jar" />
			<execfilelist dir='lib/mplayer/osx' files="mplayer" />
		</jarbundler>
	</target>

	<!--Create jarbundler zip -->
	<target name='build_macos' depends='jarbundler'>
		<echo message='Create Jajuk MAC OS package' />
		<zip zipfile='${packages.dir}/jajuk-macos-${version}.zip'>
			<zipfileset dir='${osx_dist.dir}' filemode='755'>
				<include name='*/**' />
			</zipfileset>
		</zip>
	</target>


	<!-- ========================== -->
	<!-- | Linux targets          | -->
	<!-- ========================== -->

	<!-- tarball with jajuk jars, dependencies and mplayer -->
	<target name='tarball_linux' depends='build_jajuk'>
		<echo message='Prepare files to build Linux tarball' />
		<mkdir dir='${linux_tarball.dir}/lib' />
		<copy todir='${linux_tarball.dir}/lib'>
			<fileset dir='lib/native' />
			<fileset file='lib/*.jar' />
		</copy>
		<copy todir='${linux_tarball.dir}'>
			<fileset file='${packages.dir}/jajuk.jar' />
			<fileset file='src/packaging/linux/*' />
		</copy>
		<copy file='src/main/resources/icons/64x64/jajuk-icon_64x64.png' tofile='${linux_tarball.dir}/jajuk.png' />
		<chmod file="${linux_tarball.dir}/jajuk" perm="ugo+rx" />
		<chmod file="${linux_tarball.dir}/installer" perm="ugo+rx" />
		<!-- We don't use the ant tar task because it doesn't preserve permissions -->
		<exec executable="tar" dir="${linux_dist.dir}" os="Linux">
			<arg value="-cvz" />
			<arg value="--file=../packages/jajuk-linux-${version}.tar.gz" />
			<arg value="jajuk-${version}" />
		</exec>
	</target>

</project>
